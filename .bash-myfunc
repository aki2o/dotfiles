#!/bin/bash

function my-rand-hex() {
    local LENGTH=$1
    [ "$LENGTH" = "" ] && LENGTH=8
    ruby -e "require 'securerandom'; print SecureRandom.hex($LENGTH)"
}

function my-rand-base64() {
    local LENGTH=$1
    [ "$LENGTH" = "" ] && LENGTH=8
    ruby -e "require 'securerandom'; print SecureRandom.base64($LENGTH)"
}

function my-self-global-ip() {
    curl inet-ip.info
}

function my-docker-setup() {
  local DIR="$(pwd)"
  local NAME="$(basename "$DIR")"
  local STAT="$(limactl ls $NAME -f '{{.Status}}' 2>/dev/null)"
  local ROSETTA="$([ `uname -m` = "arm64" ] && echo "--rosetta")"
  local DOCKER_PLUGIN_DIR="$HOME/.docker/cli-plugins"

  [ -d "$DOCKER_PLUGIN_DIR" ] || mkdir -p "$DOCKER_PLUGIN_DIR"
  [ -f "$DOCKER_PLUGIN_DIR/docker-compose" ] || ln -s "$(brew --prefix docker-compose)/bin/docker-compose" "$DOCKER_PLUGIN_DIR/docker-compose"

  if [ "$STAT" = "" ]; then
    read -p "Input the number of CPU: " CPU
    read -p "Input the number of Memory (GB): " MEMORY

    limactl create --name=$NAME --cpus=$CPU --memory=$MEMORY --mount=${DIR}:w $ROSETTA template://docker
    limactl start $NAME
  elif [ "$STAT" != "Running" ]; then
    read -p "Edit lima vm? (y/N): " DO_EDIT
    if [ "$DO_EDIT" = "y" ]; then
      read -p "Input the number of CPU: " CPU
      read -p "Input the number of Memory (GB): " MEMORY

      limactl edit $NAME --cpus=${CPU} --memory=${MEMORY}
    else
      limactl start $NAME
    fi
  fi

  [ "$(docker context ls -q | grep lima-$NAME)" = "" ] && docker context create lima-$NAME --docker "host=unix://$HOME/.lima/$NAME/sock/docker.sock"
  export DOCKER_CONTEXT=lima-$NAME

  echo ""
  echo "Done!"
  limactl ls $NAME
}

function my-docker-down() {
  local DIR="$(pwd)"
  local NAME="$(basename "$DIR")"
  local STAT="$(limactl ls $NAME -f '{{.Status}}' 2>/dev/null)"

  export DOCKER_CONTEXT=lima-$NAME

  if [ "$STAT" = "Running" ]; then
    docker compose stop
    limactl stop $NAME
  fi

  echo ""
  read -p "Delete lima vm? (y/N): " DO_DELETE
  [ "$DO_DELETE" = "y" ] && limactl delete $NAME

  echo ""
  echo "Done!"
  limactl ls $NAME
}
